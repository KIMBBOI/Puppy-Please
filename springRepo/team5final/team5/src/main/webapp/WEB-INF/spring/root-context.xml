<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns ="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:context="http://www.springframework.org/schema/context"
   xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd">
   
   <!-- Root Context: defines shared resources visible to all other web components -->
   
   <!-- 
   우리가 만든 필터 등록은 여기에 등록해야됨
   <bean id="myFilter" class="com.kh.app.filter.MyFilter">
      
   </bean>
    -->
    
   <!-- database -->
   
   <!-- spring jdbc > dataSource -->
<!--
   <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
      <property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"/>
      <property name="username" value="C##FINAL"/>
      <property name="password" value="1234"/>
   </bean>
-->

   
   <!-- commons-dbcp2 > dbcp -->
   <bean id="dbcpSource" class="org.apache.commons.dbcp2.BasicDataSource">
      <property name="driverClassName" value="oracle.jdbc.OracleDriver"/>

      <!--  <property name="url" value="jdbc:oracle:thin:@129.154.52.135:40000:xe"/> 
       <property name="username" value="KH0821_05"/> 
       <property name="password" value="1234"/>  -->

      <property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"/>
      <property name="username" value="C##TEAM5"/>
      <property name="password" value="1234"/>
      
      <property name="maxTotal" value="20"/>
      <property name="maxIdle" value="10"/>
      <property name="maxWaitMillis" value="3000"/>
   </bean>
   
   <!-- spring jdbc > jdbcTemplate -->
   <!--

<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
      <property name="dataSource" ref="dataSource"/>
   </bean>
-->
   
   <!-- SqlSessionFactoryBean -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dbcpSource"/>
      <property name="configLocation" value="classpath:/mybatis/config.xml"/>
      <property name="mapperLocations" value="classpath:/mybatis/**/*-mapper.xml"/>
   </bean>
   
   <!-- SqlSessionTemplate -->
   <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg index="0" ref="sqlSessionFactory"/>
   </bean>
   
   <!-- BCryptPasswordEncoder -->
   <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
   
   </bean>
   
   <!-- file -->
   <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <property name="defaultEncoding" value="UTF-8"/>
      <property name="maxUploadSize" value="10000000"/>
      <property name="maxUploadSizePerFile" value="5000000"/>      
   </bean>
   <!-- 이메일 인증 관련 빈 등록 -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com" />
      <property name="port" value="587" />
      <property name="username" value="msh31414@gmail.com" />
      <property name="password" value="hvsd yxsw tubi ptfd" />
      <property name="javaMailProperties">
         <props>
                <prop key="mail.transport.protocol">smtp</prop>
                <prop key="mail.smtp.auth">true</prop>
                <!-- gmail의 경우 보안문제 업데이트로 인해 SSLSocketFactory를 추가해야 smtp 사용 가능. -->
                <prop key="mail.smtp.socketFactory.class">javax.net.ssl.SSLSocketFactory</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.debug">true</prop>
                <prop key="mail.smtp.ssl.trust">smtp.gmail.com</prop>
				<prop key="mail.smtp.ssl.protocols">TLSv1.2</prop>
            </props>
      </property>
   </bean>
   <!-- tx -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
      <property name="dataSource" ref="dbcpSource"></property>
   </bean>
       
</beans>